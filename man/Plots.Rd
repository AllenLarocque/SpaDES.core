% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plots.R
\name{Plots}
\alias{Plots}
\title{Plot wrapper intended for use in a SpaDES module}
\usage{
Plots(
  data,
  fn,
  filename,
  types = quote(params(sim)[[currentModule(sim)]]$.plotsToDisk),
  paths = quote(file.path(outputPath(sim), "figures")),
  .plotInitialTime = quote(params(sim)[[currentModule(sim)]]$.plotInitialTime),
  ...
)
}
\arguments{
\item{data}{An arbitrary data object. It should be used inside the \code{Plots}
function, and should contain all the data required for the inner plotting}

\item{fn}{An arbitrary plotting function.}

\item{filename}{A name that will be the base for the files that will be saved.}

\item{types}{Character vector, zero or more of types. See below.}

\item{paths}{Currently a single path for the saved objects on disk}

\item{.plotInitialTime}{A numeric. If \code{NA} then no visual on screen. Anything
else will have visuals plotted to screen device.}

\item{...}{Anything needed by \code{fn}}
}
\description{
THIS IS STILL EXPERIMENTAL and could change in the next release.
}
\details{
This offers up to 4 different actions for a given plot:
    \itemize{
      \item To screen device
      \item To disk as raw data
      \item To disk as a saved plot object
      \item To disk as a png or other "image" file, like pdf
    }
To turn off plotting both to screen and disk, set both
\code{.plotInititalTime = NA} and \code{.plotsToDisk = NULL} or any other
value that will not trigger a TRUE with a \code{grepl} with the \code{types}
argument (e.g., \code{""} will omit all saving).



\itemize{
  \item \code{type}
    \itemize{
      \item \code{"object"} -- Will save the plot object, e.g., ggplot object
      \item \code{"raw"} -- Will save the raw data prior to plotting, e.g.,
                          the data argument
      \item \code{"png"} -- or any other type saveble with \code{ggsave}
    }
}
}
\examples{

\dontrun{
# Note: if this is used inside a SpaDES module, do not define this
#  function inside another function. Put it outside in a normal
#  module script. It will cause a memory leak, otherwise.
if (!require("ggplot2")) stop("please install ggplot2")
fn <- function(d)
  ggplot(d, aes(a)) +
  geom_histogram()
sim <- simInit()
sim$something <- data.frame(a = sample(1:10, replace = TRUE))

# Need to pass the first argument as a quote, or else it will be evaluated
#   immediately, which is what one may be trying to avoid
Plots(data = sim$something, fn = fn,
      types = c("png"),
      paths = file.path("figures"),
      .plotInitialTime = 1
      )
 } # end of dontrun
}
