% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convertToPackage.R
\name{convertToPackage}
\alias{convertToPackage}
\title{Convert standard module code into an R package}
\usage{
convertToPackage(module = NULL, path = getOption("spades.modulePath"))
}
\arguments{
\item{module}{Character string of module name, without path}

\item{path}{Character string of modulePath. Defaults to
\code{getOption("spades.modulePath")}}
}
\description{
This will move all functions that are not already in an \code{.R} file
in the \code{R} folder into that folder, one function per file, including the
\code{doEvent.xxx} function. It will not
touch any other functions already in the \code{"R"} folder. It will also create
and fill a minimal \code{DESCRIPTION} file. This will leave the \code{defineModule}
function call as the only code in the main module file. This \code{defineModule}
and a \code{doEvent.xxx} are the only 2 elements that are required for an R
package to be considered a SpaDES module. With these changes, the module should
still function normally (still experimental), but will be able to act like an
R package, e.g., for writing function documentation, using the \code{testthat}
infrastructure, etc.
}
