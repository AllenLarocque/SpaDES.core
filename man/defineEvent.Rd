% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation-spades.R
\name{defineEvent}
\alias{defineEvent}
\title{Alternative way to define events in SpaDES.core}
\usage{
defineEvent(sim, eventName = "init", code, moduleName = NULL, envir)
}
\arguments{
\item{sim}{A simList}

\item{eventName}{Character string of the desired event name to define. Default is "init"}

\item{code}{A quoted expression that defines the code to execute during the event.}

\item{moduleName}{Character string of the name of the module. If this function is
used within a module, then it will try to find the module name.}

\item{envir}{An optional environment to specify where to put the resulting function.
Normally, this should be left missing.}
}
\description{
There are two ways to define what occurs during an event: defining a function
called doEvent.<moduleName>, where <moduleName> is the actual module name. This
approach is the original approach used in SpaDES.core, and it must have an
explicit \code{switch} statement branching on \code{eventType}. The newer approach
(still experimental) uses \code{defineEvent}. This may be a little bit cleaner,
but it requires that a user pass a quoted expression to the \code{code} argument.
}
\seealso{
\code{\link{defineModule}}
}
